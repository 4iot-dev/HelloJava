<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

    <!-- 写数据源配置 -->
    <bean id="stockDataSourceWrite" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close" lazy-init="true">
        <property name="driverClassName">
            <value>com.mysql.jdbc.Driver</value>
        </property>
        <property name="url">
            <value>jdbc:mysql://localhost:3306/hello_order</value>
        </property>
        <property name="username">
            <value>root</value>
        </property>
        <property name="password">
            <value>root</value>
        </property>
    </bean>

    <!--事务配置 -->
    <bean id="stockTransactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="stockDataSourceWrite"/>
    </bean>

    <tx:advice id="stockTxAdvice" transaction-manager="stockTransactionManager">
        <tx:attributes>
            <!--方法后缀是WithTx加入事务 -->
            <tx:method name="*WithTx" propagation="REQUIRED"
                       rollback-for="java.lang.Throwable"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="stockPointCut"
                      expression="execution(* com.hello.order.manage..*.*(..))"/>
        <aop:advisor advice-ref="stockTxAdvice" pointcut-ref="stockPointCut"/>
    </aop:config>

    <!--mybatis配置-->
    <bean id="stockSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="stockDataSourceWrite"/>
        <!--映射文件位置：可以指定多个，支持通配符-->
        <property name="mapperLocations">
            <list>
                <!--配置公共的映射文件-->
                <value>classpath*:mapper/*.xml</value>
                <value>classpath*:mapper/ext/**/*.xml</value>
            </list>
        </property>
        <!--配置拦截器，可以配置多个拦截器-->
        <property name="plugins">
            <list>
            </list>
        </property>
    </bean>

    <!-- 配置SqlSessionTemplate -->
    <bean id="stockSqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="stockSessionFactory"/>
    </bean>
    <!-- 配置mybatis mapper接口 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.hello.order.mapper"/>
        <property name="sqlSessionTemplateBeanName" value="stockSqlSessionTemplate"/>
    </bean>
</beans>